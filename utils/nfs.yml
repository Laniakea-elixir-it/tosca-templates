tosca_definitions_version: tosca_simple_yaml_1_0

imports:
    - indigo_custom_types: https://baltig.infn.it/mtangaro/tosca-types/-/raw/htcondor_laniakea/tosca_types/applications/laniakea_types.yaml

description: >
  Deploy HTCondor

topology_template:
  inputs:

    users:
      type: list
      description: list of users to create on the VM
      entry_schema:
        type: tosca.datatypes.indigo.User
      default: []
      required: false

    storage_size:
      type: scalar-unit.size
      description: Amount of storage for the VM
      default: 10 GB
      constraints:
      - valid_values: [ 10 GB, 50 GB, 100 GB ]

    export_dir:
      type: string
      description: path to store galaxy data
      default: /export

  node_templates:

    #__________________________________
    # nfs server

    nfs_server_config:
      type: tosca.nodes.Laniakea.NFS
      properties:
        nfs_mode: server
        nfs_exports:
          - path: /export
            export: "vnode-*.localdomain(rw,async,no_root_squash,no_subtree_check,insecure)"
      requirements:
        - host: nfs_server

    nfs_server:
      type: tosca.nodes.indigo.Compute
      properties:
        os_users: { get_input: users }
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            #private_ip: false
        host:
          properties:
            num_cpus: 4
            mem_size: 8 GB
        os:
          properties:
            image: rocklinux-9
            #distribution: centos
            #version: 7
      requirements:
        # contextually this can only be a relationship type
        - local_storage:
            # capability is provided by Compute Node Type
            node: my_block_storage
            capability: tosca.capabilities.Attachment
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: { get_input: export_dir }
                device: hdb

    my_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: storage_size }

    #__________________________________
    # nfs client

    nfs_client_config:
      type: tosca.nodes.Laniakea.NFS
      properties:
        nfs_mode: client
        nfs_client_imports:
          - local: { get_input: export_dir }
            remote: { get_input: export_dir }
            server_host: { get_attribute: [ nfs_server, private_address, 0 ] }
            options: "rw,hard,intr,nosuid,quota"
        mount_mode: "autofs"
        autofs_maps: #{ "galaxy": { "path": "/-", "options": "nfsvers=3" } }
          galaxy:
            path: /-
            options: "nfsvers=3"
      requirements:
        - host: compute_node

    compute_node:
      type: tosca.nodes.indigo.Compute
      properties:
        os_users: { get_input: users }
      capabilities:
        scalable:
          properties:
            count: 2
        host:
          properties:
            num_cpus: 4
            mem_size: 8 GB
        os:
          properties:
            image: rocklinux-9
            #distribution: centos
            #version: 7
  
  outputs:
    node_ip:
      value: { get_attribute: [ nfs_server, public_address, 0 ] }
    os_users:
      value: { get_property: [ nfs_server, os_users, 0 ] }
