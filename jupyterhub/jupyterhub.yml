tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  #- indigo_custom_types: https://raw.githubusercontent.com/mtangaro/tosca-types/laniakea-galaxy/custom_types.yaml
  - indigo_custom_types: https://baltig.infn.it/mtangaro/tosca-types/-/raw/htcondor_laniakea/tosca_types/applications/laniakea_types.yaml

description: >
  Deploy JupyterHub on a single Virtual Machine.

topology_template:
  inputs:

    # Instance config
    users:
      type: list
      description: list of users to create on the VM
      entry_schema:
        type: tosca.datatypes.indigo.User
      default: []
      required: false

    num_cpus:
      type: integer
      description: Number of virtual cpus for the VM
      default: 1

    mem_size:
      type: scalar-unit.size
      description: Amount of memory for the VM
      default: 2 GB

    os_distribution:
      type: string
      default: ubuntu
      description: Operating System distro
      constraints:
         - valid_values: [ "ubuntu", "rockylinux" ]

    os_version:
      type: version
      default: 22.04
      description: Operating System distribution version
      constraints:
         - valid_values: [ 22.04, 9.3 ]

    storage_size:
      type: string
      description: storage memory required for the instance
      default: 10 GB      

    export_dir:
      type: string
      description: path to store jupyterhub data
      default: /export

    jupyterhub_username:
      type: string
      description: JupyterHub default user
      default: jupyterhub
      required: false

    jupyterhub_password:
      type: string
      descritpion: JupyterHub default password for jupyterhub user
      default: changeit
      required: false

  node_templates:

    jupyterhub:
      type: tosca.nodes.indigo.JupyterHubPortal
      properties:
        jupyterhub_username: { get_input: jupyterhub_username }
        jupyterhub_password: { get_input: jupyterhub_password }
        export_dir: { get_input: export_dir }
      requirements:
        - host: jupyterhub_server

    jupyterhub_server:
      type: tosca.nodes.indigo.Compute
      properties:
        os_users: { get_input: users }
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            private_ip: false
            ports:
              jupyterhub_port:
                protocol: tcp
                source: 80
        host:
         properties:
            num_cpus: { get_input: num_cpus }
            mem_size: { get_input: mem_size }
        os:
          properties:
            distribution: { get_input: os_distribution }
            version: { get_input: os_version }
      requirements:
        - local_storage:
            node: my_block_storage
            capability: tosca.capabilities.Attachment
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: { get_input: export_dir }
                device: hdb

    my_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: storage_size }

  outputs:
    endpoint:
       value: { concat: [ 'http://', get_attribute: [ jupyterhub_server, public_address, 0 ], '/jupyter' ] }
    node_ip:
      value: { get_attribute: [ jupyterhub_server, public_address, 0 ] }
    os_users:
      value: { get_property: [ jupyterhub_server, os_users, 0 ] }
